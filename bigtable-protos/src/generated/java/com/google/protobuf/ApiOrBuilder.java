// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/api.proto

package com.google.protobuf;

public interface ApiOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.protobuf.Api)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The fully qualified name of this api, including package name
   * followed by the api's simple name.
   * </pre>
   */
  java.lang.String getName();
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The fully qualified name of this api, including package name
   * followed by the api's simple name.
   * </pre>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   *
   * <pre>
   * The methods of this api, in unspecified order.
   * </pre>
   */
  java.util.List<com.google.protobuf.Method> 
      getMethodsList();
  /**
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   *
   * <pre>
   * The methods of this api, in unspecified order.
   * </pre>
   */
  com.google.protobuf.Method getMethods(int index);
  /**
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   *
   * <pre>
   * The methods of this api, in unspecified order.
   * </pre>
   */
  int getMethodsCount();
  /**
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   *
   * <pre>
   * The methods of this api, in unspecified order.
   * </pre>
   */
  java.util.List<? extends com.google.protobuf.MethodOrBuilder> 
      getMethodsOrBuilderList();
  /**
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   *
   * <pre>
   * The methods of this api, in unspecified order.
   * </pre>
   */
  com.google.protobuf.MethodOrBuilder getMethodsOrBuilder(
      int index);

  /**
   * <code>repeated .google.protobuf.Option options = 3;</code>
   *
   * <pre>
   * Any metadata attached to the API.
   * </pre>
   */
  java.util.List<com.google.protobuf.Option> 
      getOptionsList();
  /**
   * <code>repeated .google.protobuf.Option options = 3;</code>
   *
   * <pre>
   * Any metadata attached to the API.
   * </pre>
   */
  com.google.protobuf.Option getOptions(int index);
  /**
   * <code>repeated .google.protobuf.Option options = 3;</code>
   *
   * <pre>
   * Any metadata attached to the API.
   * </pre>
   */
  int getOptionsCount();
  /**
   * <code>repeated .google.protobuf.Option options = 3;</code>
   *
   * <pre>
   * Any metadata attached to the API.
   * </pre>
   */
  java.util.List<? extends com.google.protobuf.OptionOrBuilder> 
      getOptionsOrBuilderList();
  /**
   * <code>repeated .google.protobuf.Option options = 3;</code>
   *
   * <pre>
   * Any metadata attached to the API.
   * </pre>
   */
  com.google.protobuf.OptionOrBuilder getOptionsOrBuilder(
      int index);

  /**
   * <code>optional string version = 4;</code>
   *
   * <pre>
   * A version string for this api. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version
   * is omitted, it defaults to zero. If the entire version field is
   * empty, the major version is derived from the package name, as
   * outlined below. If the field is not empty, the version in the
   * package name will be verified to be consistent with what is
   * provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * API, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, none-GA apis.
   * See also: [design doc](http://go/api-versioning).
   * </pre>
   */
  java.lang.String getVersion();
  /**
   * <code>optional string version = 4;</code>
   *
   * <pre>
   * A version string for this api. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version
   * is omitted, it defaults to zero. If the entire version field is
   * empty, the major version is derived from the package name, as
   * outlined below. If the field is not empty, the version in the
   * package name will be verified to be consistent with what is
   * provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * API, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, none-GA apis.
   * See also: [design doc](http://go/api-versioning).
   * </pre>
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   *
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   */
  boolean hasSourceContext();
  /**
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   *
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   */
  com.google.protobuf.SourceContext getSourceContext();
  /**
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   *
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   */
  com.google.protobuf.SourceContextOrBuilder getSourceContextOrBuilder();
}
